<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.student.management.repository.StudentRepository">
<!-- 受講生情報を全件検索（論理削除されているものは除外） -->
  <select id="searchStudents" resultType="raisetech.student.management.data.Student">
    SELECT * FROM students WHERE deleted = 0 ORDER BY id
  </select>
<!-- 受講生のコース情報を全件検索 -->
  <select id="searchStudentCourses" resultType="raisetech.student.management.data.StudentCourse">
    SELECT * FROM student_courses
  </select>
<!-- 受講生IDを指定して受講生情報を検索 -->
  <select id="searchStudentById" resultType="raisetech.student.management.data.Student">
    SELECT * FROM students WHERE id = #{id}
  </select>
<!-- 受講生IDを指定して受講生のコース情報を検索 -->
  <select id="searchStudentCoursesByStudentId" resultType="raisetech.student.management.data.StudentCourse">
    SELECT * FROM student_courses WHERE student_id = #{studentId}
  </select>
<!-- コース情報を全件検索 -->
  <select id="searchCourses" resultType="raisetech.student.management.data.Course">
    SELECT * FROM courses
  </select>
<!-- コースIDを指定してコース名を検索 -->
  <select id="searchCourseNameById" resultType="String">
    SELECT name FROM courses WHERE id = #{id}
  </select>
<!-- 受講生情報を新規登録 -->
  <insert id="insertStudent" parameterType="raisetech.student.management.data.Student" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students VALUES (#{id}, #{name}, #{kanaName}, #{nickname}, #{email}, #{livingArea}, #{age}, #{gender}, #{remark}, #{deleted})
  </insert>
<!-- 受講生のコース情報を新規登録 -->
  <insert id="insertStudentCourse" parameterType="raisetech.student.management.data.StudentCourse" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO student_courses VALUES (#{id}, #{studentId}, #{startDate}, #{endDueDate}, #{courseId})
  </insert>
<!-- コース情報を新規登録 -->
  <insert id="insertCourse" parameterType="raisetech.student.management.data.Course" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO courses VALUES (#{id}, #{name}, #{price})
  </insert>
<!-- 受講生情報を更新 -->
  <update id="updateStudent" parameterType="raisetech.student.management.data.Student">
    UPDATE students SET name = #{name}, kana_name = #{kanaName}, nickname = #{nickname}, email = #{email}, living_area = #{livingArea}, age = #{age}, gender = #{gender}, remark = #{remark}, deleted = #{deleted} WHERE id = #{id}
  </update>
<!-- 受講生情報を論理削除 -->
  <update id="deleteStudent" parameterType="Integer">
    UPDATE students SET deleted = 1 WHERE id = #{id}
  </update>
<!-- 受講生のコース申し込み状況を全件検索 -->
  <select id="searchStudentCourseStatuses" resultType="raisetech.student.management.data.StudentCourseStatus">
    SELECT * FROM student_course_statuses
  </select>
<!-- 受講生のコース申し込み状況をIDを指定して検索 -->
  <select id="searchStudentCourseStatusById" resultType="raisetech.student.management.data.StudentCourseStatus">
    SELECT * FROM student_course_statuses WHERE id = #{id}
  </select>
<!-- 受講生のコース申し込み状況を受講生IDを指定して検索 -->
  <select id="searchStudentCourseStatusByStudentCourseId" resultType="raisetech.student.management.data.StudentCourseStatus">
    SELECT * FROM student_course_statuses WHERE student_course_id = #{studentCourseId}
  </select>
<!-- 受講生のコース申し込み状況を新規登録　-->
  <insert id="insertStudentCourseStatus" parameterType="raisetech.student.management.data.StudentCourseStatus" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO student_course_statuses VALUES (#{id}, #{studentCourseId}, #{status})
  </insert>
<!-- 受講生のコース申し込み状況を受講中に更新 -->
  <update id="updateStudentCourseStatusInProgress" parameterType="Integer">
    UPDATE student_course_statuses SET status = '受講中' WHERE student_course_id = #{studentCourseId}
  </update>
<!-- 受講生のコース申し込み状況を完了に更新 -->
  <update id="updateStudentCourseStatusCompleted" parameterType="Integer">
    UPDATE student_course_statuses SET status = '完了' WHERE student_course_id = #{studentCourseId}
  </update>
<!-- 受講生コース情報をIDを指定して検索 -->
  <select id="searchStudentCourseById" resultType="raisetech.student.management.data.StudentCourse">
    SELECT * FROM student_courses WHERE id = #{id}
  </select>
<!-- 受講生コース情報を更新 -->
  <update id="updateStudentCourse" parameterType="raisetech.student.management.data.StudentCourse">
    UPDATE student_courses SET student_id = #{studentId}, start_date = #{startDate}, end_due_date = #{endDueDate}, course_id = #{courseId} WHERE id = #{id}
  </update>
</mapper>
